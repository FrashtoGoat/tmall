spring:
  mvc:
    view:
      prefix: classpath:/templates/
      suffix: .html

  application:
    name: tmall-demo

#  datasource:
#    driver-class-name: org.h2.Driver
#    schema: classpath:db/schema-h2.sql
#    data: classpath:db/data-h2.sql
#    url: jdbc:h2:mem:test
#    username: root
#    password: test

  datasource:
    url: jdbc:mysql://192.168.177.128:3306/mymall?useUnicode=true&characterEncoding=utf-8&verifyServerCertificate=false&useSSL=false&requireSSL=false&serverTimeZone=GMT
    username: root
    password: kobe111
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 2
      min-idle: 1
      max-active: 20
      max-wait: 60000
      time-between-eviction-runsMillis: 60000
      min-evictable-idle-timeMillis: 300000
      validation-query: select 'x' FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


    datasource:
      url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&verifyServerCertificate=false&useSSL=false&requireSSL=false
      driver-class-name: com.mysql.jdbc.Driver
      username: root
      password: kobe111
      tomcat:
        max-wait: 10000
        min-idle: 0
        initial-size: 25
        validation-query: SELECT 1
        test-on-borrow: false
        test-while-idle: true
        time-between-eviction-runs-millis: 18800
        remove-abandoned: true
        remove-abandoned-timeout: 180

#  datasource:
#    url: jdbc:h2:mem:job_event_storage
#    driver-class-name: org.h2.Driver
#    username: sa
#    password:


  profiles:
    active: dev

  devtools:
    restart:
      enabled: true
      exclude: WEB-INF/**

  #redis配置
#  redis:
#    host: 192.168.177.128
#    #    host: 121.36.75.169 # Redis服务器地址
#    database: 0 # Redis数据库索引（默认为0）
#    port: 6379 # Redis服务器连接端口
#    password: # Redis服务器连接密码（默认为空）
#    #    password: kobe111
#    timeout: 5000 # 连接超时时间（毫秒）

  redis:
    database: 0
    host: 192.168.177.128
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1
        min-idle: 0
    port: 6379
    timeout: 15000



logging:
  file:
    path: d:/log/tmall
#    name: ${spring.application.name}.log
  level:
    com : info
    org.springframework.web: "info"



# ===== 自定义swagger配置 ===== #
swagger:
  enable: true
  application-name: ${spring.application.name}
  application-version: 1.0
  application-description: tech-demo
#  try-host: http://localhost:${server.port}

jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: mall-portal-secret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24*7)
  tokenHead: 'Bearer '  #JWT负载中拿到开头

server:
  port: 9090





person:
  name: txb
  age: 25
  company: 比地


elasticjob:
  tracing:
    type: RDB
  regCenter:
    serverLists: 192.168.177.128:2181
    namespace: elasticjob-lite-springboot
  jobs:
    simpleJob:
      elasticJobClass: com.xiaoluban.elasticjob.job.SpringBootSimpleJob
      cron: 0/5 * * * * ?
      shardingTotalCount: 1
      shardingItemParameters: 0=Beijing,1=Shanghai,2=Guangzhou
    dataflowJob:
      elasticJobClass: com.xiaoluban.elasticjob.job.SpringBootDataflowJob
      cron: 0/5 * * * * ?
      shardingTotalCount: 1
      shardingItemParameters: 0=Beijing,1=Shanghai,2=Guangzhou
    scriptJob:
      elasticJobType: SCRIPT
      cron: 0/10 * * * * ?
      shardingTotalCount: 1
      props:
        script.command.line: "echo SCRIPT Job: "
    manualScriptJob:
      elasticJobType: SCRIPT
      jobBootstrapBeanName: manualScriptJobBean
      shardingTotalCount: 1
      props:
        script.command.line: "echo Manual SCRIPT Job: "
    occurErrorNoticeDingtalkJob:
      elasticJobClass: com.xiaoluban.elasticjob.job.SpringBootOccurErrorNoticeDingtalkJob
      overwrite: true
      shardingTotalCount: 1
      shardingItemParameters: 0=Beijing,1=Shanghai,2=Guangzhou
      jobErrorHandlerType: DINGTALK
      jobBootstrapBeanName: occurErrorNoticeDingtalkBean
      props:
        dingtalk:
          webhook: you_webhook
          keyword: you_keyword
          secret: you_secret
          connectTimeout: 3000
          readTimeout: 5000
    occurErrorNoticeWechatJob:
      elasticJobClass: com.xiaoluban.elasticjob.job.SpringBootOccurErrorNoticeWechatJob
      overwrite: true
      shardingTotalCount: 1
      shardingItemParameters: 0=Beijing,1=Shanghai,2=Guangzhou
      jobErrorHandlerType: WECHAT
      jobBootstrapBeanName: occurErrorNoticeWechatBean
      props:
        wechat:
          webhook: you_webhook
          connectTimeout: 3000
          readTimeout: 5000
    occurErrorNoticeEmailJob:
      elasticJobClass: com.xiaoluban.elasticjob.job.SpringBootOccurErrorNoticeEmailJob
      overwrite: true
      shardingTotalCount: 1
      shardingItemParameters: 0=Beijing,1=Shanghai,2=Guangzhou
      jobErrorHandlerType: EMAIL
      jobBootstrapBeanName: occurErrorNoticeEmailBean
      props:
        email:
          host: host
          port: 465
          username: username
          password: password
          useSsl: true
          subject: ElasticJob error message
          from: from@xxx.xx
          to: to1@xxx.xx,to2@xxx.xx
          cc: cc@xxx.xx
          bcc: bcc@xxx.xx
          debug: false
  dump:
    port: 9888
